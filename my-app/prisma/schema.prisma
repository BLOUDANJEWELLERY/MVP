// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  email       String    @unique
  password    String
  role        String    // e.g., "buyer" or "seller"
  
  // Personal Info
  firstName   String
  lastName    String?
  dob         DateTime? // optional
  gender      String?   // e.g., "male", "female", "other"

  // Address Info
  address1    String?
  address2    String?
  state       String?
  country     String?
  postalCode  String?

  // Relations
  products    Product[] // back-relation for owned products

  // Timestamps
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  price       Float
  images      String[]       // required, can be empty
  colors      String[]       @default([])
  sizes       String[]       @default([])
  condition   String     @default("")
  era         String     @default("")
  categories  Category[] @relation("ProductCategories")
	quantity    Int
  ownerId     String          @db.ObjectId
  owner       User            @relation(fields: [ownerId], references: [id])
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Category {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  order     Int        @default(0)
  parentId  String?    @db.ObjectId
  parent    Category?  @relation("CategoryChildren", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Category[] @relation("CategoryChildren")
 createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}