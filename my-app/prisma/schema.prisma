// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  password  String
  role      String

  firstName String
  lastName  String?
  dob       DateTime?
  gender    String?

  address1   String?
  address2   String?
  state      String?
  country    String?
  postalCode String?

  products  Product[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  price       Float
  images      String[]
  colors      String[]   @default([])
  sizes       String[]   @default([])
  condition   String     @default("")
  era         String     @default("")
  quantity    Int

  ownerId     String     @db.ObjectId
  owner       User       @relation(fields: [ownerId], references: [id])

  categories  ProductCategory[]  // explicit join relation

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  order     Int        @default(0)
  parentId  String?    @db.ObjectId
  parent    Category?  @relation("CategoryChildren", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Category[] @relation("CategoryChildren")

  products  ProductCategory[] // explicit join relation

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// Explicit join table for Product â†” Category many-to-many
model ProductCategory {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  productId  String   @db.ObjectId
  categoryId String   @db.ObjectId

  product    Product  @relation(fields: [productId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@unique([productId, categoryId])
}